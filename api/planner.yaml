openapi: 3.0.0
info:
  title: Task API
  description: API for task management
  version: 1.0.0
paths:
  /planner/lists:
    post:
      operationId: createList
      summary: Create a new list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewListRequest'
      responses:
        '201':
          description: "ok"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdResponse'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    get:
      operationId: getLists
      summary: Get all lists
      responses:
        '201':
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListsResponse'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /planner/lists/{id}:
    patch:
      operationId: updateList
      summary: Update list parameters
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/UpdateListRequest'
      responses:
        '200':
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      operationId: deleteList
      summary: Delete list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: "ok"
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Status'
          default:
            description: "default"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'
  /planner/tasks:
    post:
      operationId: createTask
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTaskRequest'
      responses:
        '201':
          description: "ok"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskIdResponse'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    get:
      operationId: getTasks
      summary: Get all tasks
      parameters:
        - name: list_id
          in: query
          description: get tasks from list
          schema:
            type: string
      responses:
        '201':
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TasksResponse'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /planner/tasks/{id}:
    patch:
      operationId: updateTask
      summary: Update task parameters
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: "ok"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        default:
          description: "default"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      operationId: deleteTask
      summary: Delete task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: "ok"
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Status'
          default:
            description: "default"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Status'

components:
  schemas:
    UpdateTaskRequest:
      properties:
        status:
          type: boolean
        name:
          type: string
        description:
          type: string
        listId:
          type: string
    Task:
        required:
        - id
        - name
        - description
        - status
        - owner_id
        - list_id
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          owner_id:
            type: string
          status:
            type: boolean
          list_id:
            type: string
    TasksResponse:
        required:
          - status
          - tasks
        properties:
          tasks:
            type: array
            items:
              $ref: '#/components/schemas/Task'
          status:
            $ref: '#/components/schemas/Status'
    TaskIdResponse:
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    NewTaskRequest:
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
        listId:
          type: string
    NewListRequest:
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    UpdateListRequest:
      properties:
        status:
          type: boolean
        name:
          type: string
        description:
          type: string
        listId:
          type: string
    ListIdResponse:
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    ListsResponse:
      required:
        - status
        - lists
      properties:
        lists:
          type: array
          items:
            $ref: '#/components/schemas/List'
        status:
          $ref: '#/components/schemas/Status'
    List:
      required:
      - id
      - name
      - description
      - owner_id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        owner_id:
          type: string
    Status:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int
        message:
          type: string
